<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>筱茗辰</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gracesoul.github.io/"/>
  <updated>2019-04-12T08:11:39.218Z</updated>
  <id>https://gracesoul.github.io/</id>
  
  <author>
    <name>Grace Soul</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo与markdown语法简单汇总</title>
    <link href="https://gracesoul.github.io/2019/04/09/hexo%E4%B8%8Emarkdown%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95%E6%B1%87%E6%80%BB/"/>
    <id>https://gracesoul.github.io/2019/04/09/hexo与markdown语法简单汇总/</id>
    <published>2019-04-09T09:02:57.000Z</published>
    <updated>2019-04-12T08:11:39.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo与markdown语法简单汇总"><a href="#hexo与markdown语法简单汇总" class="headerlink" title="hexo与markdown语法简单汇总"></a>hexo与markdown语法简单汇总</h1><h2 id="hexo语法"><a href="#hexo语法" class="headerlink" title="hexo语法"></a>hexo语法</h2><ol><li>hexo init —&gt;初始化本地文件夹为网站的根目录</li><li>hexo new post’博客名’ = hexo new ‘博客名’;简称:hexo n —&gt;新建文字(默认.md)</li><li>hexo generate —&gt; 生成静态文件;简称:hexo g</li><li>hexo deploy —&gt; 用于部署网站;简称:hexo d</li><li>hexo server —&gt; 用于启动本地服务器;简称:hexo s<br>5.1 hexo server -p —&gt;指定服务器端口,默认4000<br>5.2 hexo server -i —&gt;指定服务器ip地址,默认0.0.0.0<br>5.3 hexo server -s —&gt;静态模式,仅提供 public 文件夹中的文件并禁用文件监视</li><li>hexo g -d —&gt;指定生成后部署</li><li>hexo clean —&gt;用于清除缓存文件</li></ol><h2 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h2><ol><li><p>标题<br>1.1 一级标题—&gt;#<br>1.2 二级标题—&gt;##<br>1.3 三级标题—&gt;###<br>1.4 四级标题—&gt;####<br>1.5 五级标题—&gt;#####<br>1.6 六级标题—&gt;######</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></li><li><p>字体<br>2.1 加粗—&gt;<strong>要加粗的内容</strong><br>2.2 斜体—&gt;<em>要倾斜的内容</em><br>2.3 斜体加粗—&gt;<strong><em>要斜体加粗的内容</em></strong><br>2.4 删除线—&gt;<del>需要加删除线的内容</del>   </p></li><li><p>引用<br>语法:&gt;需要引用的文字内容</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是引用的内容</span><br><span class="line"><span class="meta">&gt;&gt;</span> 这也是引用的内容</span><br></pre></td></tr></table></figure></li><li><p>分割线<br>-/*三个以上即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span><span class="meta">---</span></span><br><span class="line"><span class="string">***</span></span><br><span class="line"><span class="string">*****</span></span><br></pre></td></tr></table></figure></li><li><p>图片 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 语法:  </span><br><span class="line">![<span class="string">图片alt</span>](<span class="link">图片地址 "图片title"</span>)---&gt;title可不加</span><br><span class="line"> 例如:</span><br><span class="line">![<span class="string">古风</span>](<span class="link">https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1555065335148&amp;di=e3e3187e01f54cd7bc807b3068230a40&amp;imgtype=0&amp;src=http%3A%2F%2Fp4.gexing.com%2FG1%2FM00%2F3F%2F3D%2FrBACJlTKBjPSVP1XAAEBEKmUep8763.jpg</span>)</span><br></pre></td></tr></table></figure></li><li><p>超链接  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法: </span><br><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址 "超链接title"</span>)--&gt;title可不加</span><br><span class="line">例如:</span><br><span class="line">[<span class="string">简书</span>](<span class="link">http://jianshu.com</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://baidu.com</span>)</span><br></pre></td></tr></table></figure></li><li><p>列表 </p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">7.1</span> 无序列表---&gt;-+*都可以(符号与内容之间都要有一个空格)     </span><br><span class="line">  <span class="number">7.2</span> 有序列表---&gt;数字加点(数字与内容之间也要有空格)</span><br><span class="line">  <span class="number">7.3</span> 列表嵌套---&gt;上一级与下一级之间敲三个空格        </span><br><span class="line">* 测试数据                                    </span><br><span class="line">   - 测试<span class="number">1</span></span><br><span class="line">   + 测试<span class="number">2</span></span><br><span class="line">   - 测试<span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>表格       </p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|<span class="string">技能</span>|<span class="string">排行</span></span><br><span class="line"><span class="string">--</span>|<span class="string">:--:</span>|<span class="string">--:</span></span><br><span class="line"><span class="string">刘备</span>|<span class="string">哭</span>|<span class="string">大哥</span></span><br><span class="line"><span class="string">关羽</span>|<span class="string">打</span>|<span class="string">二哥</span></span><br><span class="line"><span class="string">张飞</span>|<span class="string">骂</span>|<span class="string">三弟</span></span><br></pre></td></tr></table></figure></li><li><p>代码<br>9.1 单行代码:代码之间分别用一个反引号括起来 <code>单行代码</code><br> <code>单行代码内容</code><br>9.2 多行代码:代码之间分别用三个反引号括起来</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">代码内容</span><br><span class="line">代码内容</span><br><span class="line">代码...</span><br></pre></td></tr></table></figure></li><li><p>流程图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo与markdown语法简单汇总&quot;&gt;&lt;a href=&quot;#hexo与markdown语法简单汇总&quot; class=&quot;headerlink&quot; title=&quot;hexo与markdown语法简单汇总&quot;&gt;&lt;/a&gt;hexo与markdown语法简单汇总&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="简单语法汇总" scheme="https://gracesoul.github.io/categories/%E7%AE%80%E5%8D%95%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    
    
      <category term="hexo" scheme="https://gracesoul.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="https://gracesoul.github.io/tags/markdown/"/>
    
      <category term="语法" scheme="https://gracesoul.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python自动化测试面试题</title>
    <link href="https://gracesoul.github.io/2019/04/04/python%E8%87%AA%E5%8A%A8%E5%8C%96%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://gracesoul.github.io/2019/04/04/python自动化面试题/</id>
    <published>2019-04-04T02:55:33.000Z</published>
    <updated>2019-04-09T07:49:53.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的python自动化测试的面试题目"><a href="#常见的python自动化测试的面试题目" class="headerlink" title="常见的python自动化测试的面试题目"></a>常见的python自动化测试的面试题目</h1><h3 id="1-对函数传参为可变型数据类型-进行改进"><a href="#1-对函数传参为可变型数据类型-进行改进" class="headerlink" title="1. 对函数传参为可变型数据类型 进行改进"></a>1. 对函数传参为可变型数据类型 进行改进</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def <span class="builtin-name">add</span>(ele,mylist=[]):</span><br><span class="line">mylist.append(ele)</span><br><span class="line">return mylist</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(4))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(5))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(6))</span><br></pre></td></tr></table></figure><hr><p>运行结果如下图:<br>    <img src="//gracesoul.github.io/2019/04/04/python自动化面试题/test1.png" alt="代码结果图"></p><hr><ol><li><p>解决方法一:(最简单的方法,但是代码有点冗余)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  def <span class="builtin-name">add</span>(ele,mylist=[]):</span><br><span class="line">   mylist.append(ele)</span><br><span class="line">   return mylist</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(4,[]))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(5,[]))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(6,[]))</span><br></pre></td></tr></table></figure></li><li><p>解决方法二:(<strong>推荐使用</strong>)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  def <span class="builtin-name">add</span>(ele,mylist=[]):</span><br><span class="line">   <span class="keyword">if</span> <span class="keyword">not</span> mylist:</span><br><span class="line">   mylist=[]  </span><br><span class="line">   mylist.append(ele)</span><br><span class="line">   return mylist</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(4))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(5))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(6))</span><br></pre></td></tr></table></figure></li><li><p>解决方法三:(将默认参数修改为 不可变的类型)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def <span class="builtin-name">add</span>(ele,<span class="attribute">mylist</span>=None):</span><br><span class="line"> mylist.append(ele)</span><br><span class="line"> return mylist</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(4))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(5))</span><br><span class="line"><span class="builtin-name">print</span>(<span class="builtin-name">add</span>(6))</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="2-简述方法中-init-与-new-的区别"><a href="#2-简述方法中-init-与-new-的区别" class="headerlink" title="2. 简述方法中__init__() 与__new__()的区别?"></a>2. 简述方法中__init__() 与__new__()的区别?</h3><ol><li><p>方法__new__()的特性<br>1.1 __new__()用于创建实例,在实例创建之前调用,类级别的方法,是个静态方法<br>1.2 __new__()至少有个参数cls,代表当前类,在实例化时由python解释器自动识别<br>1.3 __new__()必须要返回值,返回实例对象</p></li><li><p>方法__init__()的特性<br>2.1 __init__()用于初始化实例,在实例对象创建后被调用,对象级别的方法,用于设置对象的一些初始值<br>2.2 __init__()至少有一个参数self,它是<strong>new</strong>()返回的实例,<strong>init</strong>()是在<strong>new</strong>()的基础上完成数据的初始化操作<br>2.3 __init__()不需要返回值</p></li><li><p>__new__()的作用<br>3.1 __new__() 用来继承一些不可变的class(比如:int,str,tuple)提供一个自定义类的实例化过程的途径</p> <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 子类名(<span class="title">int</span>):</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls,value)</span></span><span class="symbol">:</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">super</span>(子类类名,cls).__new_<span class="number">_</span>(cls,abs(value))</span><br></pre></td></tr></table></figure><p>3.2 __new__()实现单例模式(每次初始化时只返回一个对象)</p> <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def __new__(<span class="built_in">cls</span>):</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> hasattr(<span class="built_in">cls</span>,'instance'):</span><br><span class="line"><span class="built_in">cls</span>.instance = super(子类类名,<span class="built_in">cls</span>).__new__(<span class="built_in">cls</span>)</span><br><span class="line">return <span class="built_in">cls</span>.instance</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常见的python自动化测试的面试题目&quot;&gt;&lt;a href=&quot;#常见的python自动化测试的面试题目&quot; class=&quot;headerlink&quot; title=&quot;常见的python自动化测试的面试题目&quot;&gt;&lt;/a&gt;常见的python自动化测试的面试题目&lt;/h1&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="面试测试题" scheme="https://gracesoul.github.io/categories/%E9%9D%A2%E8%AF%95%E6%B5%8B%E8%AF%95%E9%A2%98/"/>
    
    
      <category term="python" scheme="https://gracesoul.github.io/tags/python/"/>
    
      <category term="自动化" scheme="https://gracesoul.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="测试" scheme="https://gracesoul.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="面试题" scheme="https://gracesoul.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>更换主题踩得坑</title>
    <link href="https://gracesoul.github.io/2019/04/01/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E8%B8%A9%E5%BE%97%E5%9D%91/"/>
    <id>https://gracesoul.github.io/2019/04/01/更换主题踩得坑/</id>
    <published>2019-04-01T08:17:15.000Z</published>
    <updated>2019-04-09T08:06:59.523Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-使用hexo-github-搭建博客-更换主题-踩到的坑"><a href="#1-使用hexo-github-搭建博客-更换主题-踩到的坑" class="headerlink" title="1. 使用hexo+github 搭建博客 更换主题 踩到的坑"></a>1. 使用hexo+github 搭建博客 更换主题 踩到的坑</h3><ol><li>使用别人的主题 修改theme </li><li>部署发布(hexo clean   —  hexo s) </li><li>登录本地服务器 (localhost:4000)<br>界面出现:<br><img src="//gracesoul.github.io/2019/04/01/更换主题踩得坑/error.png" alt="更换主题踩得坑"></li></ol><hr><p>解决方案:<br>npm install –save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive<br>(安装 Apollo Github 的依赖包)</p><p>本地就可以正常运行<br>安装后,hexo clean —&gt;hexo s</p><p>部署到github上运行:<br>安装后,hexo clean —&gt;hexo g—&gt;hexo d</p><h3 id="本地样式正常-但是部署到github上-远程访问-样式发生改变-样式乱"><a href="#本地样式正常-但是部署到github上-远程访问-样式发生改变-样式乱" class="headerlink" title="本地样式正常,但是部署到github上 远程访问 样式发生改变(样式乱)"></a>本地样式正常,但是部署到github上 远程访问 样式发生改变(样式乱)</h3><p>原因:<br>   修改根目录下的配置文件: _config.yml  将url进行修改 root 不需要修改<br>   由于参考过网上: 将root由/—&gt;改为/你的项目名  但是经过测试,没有起到作用,可能因人而异吧<br>   配置修改如下图:<br>   <img src="//gracesoul.github.io/2019/04/01/更换主题踩得坑/result.png" alt="url配置图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-使用hexo-github-搭建博客-更换主题-踩到的坑&quot;&gt;&lt;a href=&quot;#1-使用hexo-github-搭建博客-更换主题-踩到的坑&quot; class=&quot;headerlink&quot; title=&quot;1. 使用hexo+github 搭建博客 更换主题 踩到的坑&quot;
      
    
    </summary>
    
      <category term="更换主题" scheme="https://gracesoul.github.io/categories/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    
    
      <category term="hexo" scheme="https://gracesoul.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://gracesoul.github.io/tags/github/"/>
    
      <category term="主题" scheme="https://gracesoul.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>初始hexo</title>
    <link href="https://gracesoul.github.io/2019/03/28/%E4%BD%A0%E5%A5%BD-Hexo/"/>
    <id>https://gracesoul.github.io/2019/03/28/你好-Hexo/</id>
    <published>2019-03-28T03:09:18.000Z</published>
    <updated>2019-04-04T02:02:37.828Z</updated>
    
    <content type="html"><![CDATA[<p>初次使用Hexo,是一件非常不多的事!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;初次使用Hexo,是一件非常不多的事!&lt;/p&gt;

      
    
    </summary>
    
      <category term="搭建博客" scheme="https://gracesoul.github.io/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://gracesoul.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://gracesoul.github.io/tags/github/"/>
    
      <category term="nmp" scheme="https://gracesoul.github.io/tags/nmp/"/>
    
      <category term="基础" scheme="https://gracesoul.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://gracesoul.github.io/2019/03/28/hello-world/"/>
    <id>https://gracesoul.github.io/2019/03/28/hello-world/</id>
    <published>2019-03-28T02:03:00.707Z</published>
    <updated>2019-03-28T02:03:00.707Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
